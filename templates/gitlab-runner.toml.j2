concurrent = {{
  config.gitlab_runner.capacity_per_instance
  * config.gitlab_runner.max_instances }}

[[runners]]
  url = "{{ external_url }}"
  token = "{{ gitlab_runner_token.stdout }}"             
  name = "Autoscale Runner Manager"
  executor = "docker-autoscaler"

[runners.autoscaler.connector_config]
  use_external_addr = true

[runners.autoscaler]
  plugin = "quay.io/cloudscalech/fleeting:latest"

  capacity_per_instance = {{ config.gitlab_runner.capacity_per_instance }}
  max_instances = {{ config.gitlab_runner.max_instances }}
  max_use_count = {{ config.gitlab_runner.max_use_count | default(0) }}

  # If cloud-init exists, we want it to be ready:
  # See https://cloudinit.readthedocs.io/en/latest/explanation/return_codes.html
  instance_ready_command = "command -v cloud-init || exit 0; cloud-init status --wait; test $? -ne 1"

  delete_instances_on_shutdown = {{
    config.gitlab_runner.delete_instances_on_shutdown
    | default(True)
    | ternary('true', 'false') }}

[runners.autoscaler.plugin_config]
  name = "fleeting"
  api_token = "{{ cloudscale_api_token }}"
  image = "{{ config.gitlab_runner.image }}"
  flavor = "{{ config.gitlab_runner.flavor }}"
  zone = "{{ config.gitlab_runner.zone }}"
  user_data = """{{ config.gitlab_runner.user_data }}"""
  volume_size_gb = "{{ config.gitlab_runner.volume_size_gb | default(10) }}"

{% for policy in config.gitlab_runner.policies %}
# {{ policy.name }}
[[runners.autoscaler.policy]]
  periods = {{ policy.periods | default(["* * * * *"]) }}
  {% if policy.timezone is defined -%}
  timezone = "{{ policy.timezone }}"
  {% endif -%}
  idle_count = {{ policy.idle_count | default(0) }}
  idle_time = "{{ policy.idle_time | default ("60s") }}"
  {% if policy.scale_factor is defined -%}
  scale_factor = "{{ policy.scale_factor }}"
  {% endif -%}
  {% if policy.scale_factor_limit is defined -%}
  scale_factor_limit = "{{ policy.scale_factor_limit }}"
  {% endif -%}
{% endfor %}

{% if config.gitlab_runner.s3_cache | default(False) %}
[runners.cache]
  Type = "s3"

[runners.cache.s3]
  ServerAddress = "{{ config.gitlab_runner.s3_endpoint }}"
  AccessKey = "{{ config.gitlab_runner.s3_access_key }}"
  SecretKey = "{{ config.gitlab_runner.s3_secret_key }}"
  BucketName = "{{ config.gitlab_runner.s3_bucket }}"
{% endif -%}
